@model SVU.Web.UI.ViewModels.Health.HealthRequestViewModel

<div id="health_request_form">
    <partial name="_Errors" model="Model.Errors" />
    @using (Html.BeginForm("HealthRequest", "AWPHealth", FormMethod.Post, new { @class = "slide-in-left" }))
    {
        @Html.HiddenFor(item => item.Id, new { @class = "form-control", id = "request_id" });
        <div class="form-group mb-1">
            @Html.LabelFor(item => item.Subject)
            @Html.TextBoxFor(item => item.Subject, new { @class = "form-control" })
            @Html.ValidationMessageFor(item => item.Subject, "", new { @class = "text-danger text-monospace ml-2" })
        </div>

        <div class="form-group mb-1">
            @Html.LabelFor(item => item.Content)
            @Html.TextAreaFor(item => item.Content, new { @class = "form-control", style = "min-height : 200px;" })
            @Html.ValidationMessageFor(item => item.Content, "", new { @class = "text-danger text-monospace ml-2" })
        </div>

        <div class="form-group mb-1">
            @Html.LabelFor(item => item.Note)
            @Html.TextAreaFor(item => item.Note, new { @class = "form-control", style = "min-height : 200px;" })
            @Html.ValidationMessageFor(item => item.Note, "", new { @class = "text-danger text-monospace ml-2" })
        </div>

        <div class="my-3">
            <partial name="Components/BotDetectorCaptchaComponent" model="Model.Captcha" />
            @Html.TextBoxFor(item => item.Captcha.CaptchaCode)
        </div>

        <div class="my-3">
            <button class="btn btn-primary" type="submit"> Send <i class="fa fa-paper-plane"></i></button>
            <button class="btn btn-primary collapse" type="submit" id="edit_hr_btn"> Edit <i class="fa fa-pencil-alt"></i></button>
            <button class="btn btn-primary" type="button" onclick="clearFormFields()"> Clear <i class="fa fa-eraser"></i></button>
        </div>
    }
</div>
