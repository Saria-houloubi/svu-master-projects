@model SVU.Web.UI.ViewModels.HomeworkHeartDiseaseViewModel
@{
    ViewBag.title = "ADM heart classification";
}
<!--Part Title-->
<div class="container text-center slide-in-left pt-2">
    <h1>ADM heart classification homework</h1>
    <hr />
</div>
<div class="container-fluid slide-in-right">
    <form id="patientInfo">
        <div class="row">
            <input type="number" class="form-control m-1 col-lg" id="age" min="0" max="1000" placeholder="Age" />

            <select class="custom-select m-1 col-lg" id="chestPainType">
                @foreach (var type in Model.HeartDiseasesRecords.Select(item => item.ChestPainType).Distinct())
                {
                    <option value="@type">@type</option>
                }
            </select>

            <input type="number" class="form-control m-1 col-lg" id="restBloodPressure" min="0" placeholder="Rest Blood Pressure" />
            <div class="input-group m-1 col-lg p-0">
                <div class="input-group-prepend ">
                    <div class="input-group-text">
                        <input type="checkbox" aria-label="Checkbox for following text input" id="bloodSuger">
                    </div>
                </div>
                <label class="form-control">Blood Suger</label>
            </div>
            <select class="custom-select m-1 col-lg " id="restElectro">
                @foreach (var type in Model.HeartDiseasesRecords.Select(item => item.RestElectro).Distinct())
                {
                    <option value="@type">@type</option>
                }
            </select>
            <input type="number" class="form-control m-1 col-lg" id="maxHeartRate" min="0" placeholder="Max Heart Rate" />
            <div class="input-group m-1 col-lg p-0">
                <div class="input-group-prepend">
                    <div class="input-group-text">
                        <input type="checkbox" aria-label="Checkbox for following text input" id="exerciceAngina">
                    </div>
                </div>
                <label class="form-control">Exercice Angina</label>
            </div>

        </div>
        <div class="row">
            <input type="button" class="btn btn-primary m-1 col-lg" value="Calculate ID3" onclick="getClassification('id3')" />
            <input type="button" class="btn btn-primary m-1 col-lg" value="Calculate Bayes" onclick="getClassification('bayes')" />
        </div>
    </form>
    <hr />
    <h5>Predections :</h5>
    <table class="table text-center">
        <thead class="thead-dark">
            <tr>
                <th scope="col">#</th>
                <th scope="col">SSAS</th>
                <th scope="col">Coded</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td scope="col" class="font-weight-bold">Bayes</td>
                <td><span id="ssas_bayes" class="text-primary"></span></td>
                <td><span id="coded_bayes" class="text-primary"></span></td>
            </tr>
            <tr>
                <td scope="col" class="font-weight-bold">ID3</td>
                <td><span id="ssas_id3" class="text-primary"></span></td>
                <td><span id="coded_id3" class="text-primary"></span></td>
            </tr>

        </tbody>
    </table>
    <hr />
    <h5>Dataset:</h5>
    <table class="table table-hover table-bordered lg-table">
        <thead class="thead-dark">
            <tr>
                <th scope="col">#</th>
                <th scope="col">Age</th>
                <th scope="col">Chest Pain Type</th>
                <th scope="col">Rest Blood Pressure</th>
                <th scope="col">Blood Suger</th>
                <th scope="col">Rest Electro</th>
                <th scope="col">Max Heart Rate</th>
                <th scope="col">Exercice Angina</th>
                <th scope="col">Disease</th>
            </tr>
        </thead>
        <tbody>
            @{
                if (Model.HeartDiseasesRecords != null)
                {
                    for (int i = 1; i < Model.HeartDiseasesRecords.Count(); i++)
                    {
                        var elemnet = Model.HeartDiseasesRecords.ElementAt(i - 1);
                        //The background for if the disease is true or false;
                        var bg = elemnet.Disease ? "bg-danger" : "bg-success";
                        <tr>
                            <th scope="row">@i</th>
                            <td>@elemnet.Age</td>
                            <td>@elemnet.ChestPainType</td>
                            <td>@elemnet.RestBloodPressure</td>
                            <td>@elemnet.BloodSugar     </td>
                            <td>@elemnet.RestElectro</td>
                            <td>@elemnet.MaxHeartRate</td>
                            <td>@elemnet.ExerciceAngina</td>
                            <td class="@bg text-light">@elemnet.Disease</td>
                        </tr>
                    }
                }
            }
        </tbody>
    </table>
</div>


<script>
    //
    //Will send an ajax requesting containing the patient values
    //  type : the type of algorithm we are working with
    //
    function getClassification(type) {
        var age = $('#age').val();
        var restBloodPressure = $('#restBloodPressure').val();
        var maxHeartRate = $('#maxHeartRate').val();

        //A simple check if all the values are provided
        if (!age || !restBloodPressure || !maxHeartRate) {
            showAlert("error", "Some values are missing")
            return;
        }

        getCodedClassifcation(type);
        getSSASClassification(type);
    }
    //
    //Gets the result from the coded alogrithm
    //  type : the type of algorithm we are working with
    //
    function getCodedClassifcation(type) {
        var endPoint = type == 'id3' ? 'CalculateID3' : 'CalculateBayes';
        //Get the form data
        var age = $('#age').val();
        var chestPainType = $('#chestPainType')[0].value;
        var restBloodPressure = $('#restBloodPressure').val();
        var bloodSuger = $('#bloodSuger').prop("checked");
        var restElectro = $('#restElectro')[0].value;
        var maxHeartRate = $('#maxHeartRate').val();
        var exerciceAngina = $('#exerciceAngina').prop("checked");


        $.ajax(`/homework/${endPoint}`, {
            method: 'post',
            contentType: 'application/json',
            data: JSON.stringify({
                Target: "Disease",
                DbSet: "heartdisease",
                IgnoreProperties: ["Disease", "Note", "Id", "CreationDate", "LastUpdatedDate"],
                TestExample: {
                    "Age": age,
                    "ChestPainType": chestPainType,
                    "RestBloodPressure": restBloodPressure,
                    "BloodSuger": bloodSuger,
                    "RestElectro": restElectro,
                    "MaxHeartRate": maxHeartRate,
                    "ExerciceAngina": exerciceAngina

                }
            }),
            success: function (data) {
                console.log(data);
                //Update the needed span
                if (type === 'bayes') {
                    console.log(data);
                    var values = '';
                    for (var prop in data.results) {
                        values = values.concat(`${prop} : ${(data.results[prop] * 100).toFixed(1)}%\n`)
                    }
                    $("#coded_bayes")[0].innerText = values;
                }
                else
                    $("#coded_id3")[0].innerText = data.results;

            },
            error: function (err) {
                showAlert('error', err.responseText);
            }

        })

    }
    //
    //Get the results from the SSAS
    //  type : the type of algorithm we are working with
    //
    function getSSASClassification(type) {
        //Get the form data
        var age = $('#age').val();
        var chestPainType = $('#chestPainType')[0].value;
        var restBloodPressure = $('#restBloodPressure').val();
        var bloodSuger = $('#bloodSuger').prop("checked");
        var restElectro = $('#restElectro')[0].value;
        var maxHeartRate = $('#maxHeartRate').val();
        var exerciceAngina = $('#exerciceAngina').prop("checked");

        //Create the sass query to execute
        var dmxQueryId3 = `select disease from [Heart Disease MM ID3] natural prediction join (select '${age}' as age, '${chestPainType}' as ChestPainType, '${restBloodPressure}' as RestBloodPressure, '${bloodSuger}' as BloodSugar,'${restElectro}' as RestElectro,'${maxHeartRate}' as MaxHeartRate,'${exerciceAngina}' as ExerciceAngina) as t`;
        var dmxQueryBayes = `select flattened predicthistogram(disease) from [Heart Disease MM Bayes] natural prediction join (select '${age}' as age, '${chestPainType}' as ChestPainType, '${restBloodPressure}' as RestBloodPressure, '${bloodSuger}' as BloodSugar,'${restElectro}' as RestElectro,'${maxHeartRate}' as MaxHeartRate,'${exerciceAngina}' as ExerciceAngina) as t`;
        //Choose the wanted query
        var dmxQuery = type === 'bayes' ? dmxQueryBayes : dmxQueryId3;
        showAlert('success', `Executing query \n ${dmxQuery}`, 0)

        //Get the SASS value first
        $.ajax(`http://ssas.sariahouloubi.com/api/Analysis/ExecuteQuery`, {
            method: 'post',
            contentType: 'application/json',
            data: JSON.stringify({
                Query: dmxQuery
            }),
            success: function (data) {
                //Update the needed span
                if (type === 'bayes') {
                    var values = '';
                    for (var i = 0; i < data.length; i++) {
                        values = values.concat(`${data[i]["Expression.disease"]} : ${(data[i]["Expression.$PROBABILITY"] * 100).toFixed(1)}%\n`)
                    }
                    $("#ssas_bayes")[0].innerText = values;
                }
                else
                    $("#ssas_id3")[0].innerText = data[0].play;

            },
            error: function (err) {
                showAlert('error', err.responseText);
            }

        }).always(function () {
            hideAlert('success');
        })
    }

</script>